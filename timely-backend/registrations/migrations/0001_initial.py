# Generated by Django 5.2.6 on 2025-09-16 05:27

import django.core.validators
import django.db.models.deletion
import registrations.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('api', '0001_initial'),
        ('events', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Registration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('TEAM', 'Team'), ('ATHLETE', 'Athlete')], default='ATHLETE', max_length=10)),
                ('status', models.CharField(choices=[('PENDING', 'Pending'), ('APPROVED', 'Approved'), ('REJECTED', 'Rejected')], db_index=True, default='PENDING', max_length=10)),
                ('docs', models.JSONField(blank=True, default=dict, help_text='Registration documents (JSON)')),
                ('submitted_at', models.DateTimeField(auto_now_add=True)),
                ('decided_at', models.DateTimeField(blank=True, null=True)),
                ('reason', models.TextField(blank=True, help_text='Reason for rejection or other notes')),
                ('applicant', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='registrations', to=settings.AUTH_USER_MODEL)),
                ('decided_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='decided_registrations', to=settings.AUTH_USER_MODEL)),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='registrations', to='events.event')),
                ('team', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='registrations', to='api.team')),
            ],
            options={
                'ordering': ['-submitted_at'],
            },
        ),
        migrations.CreateModel(
            name='RegistrationDocument',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('doc_type', models.CharField(choices=[('id_card', 'ID Card'), ('medical_clearance', 'Medical Clearance'), ('other', 'Other')], max_length=20)),
                ('file', models.FileField(upload_to=registrations.models.document_upload_path, validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['pdf', 'jpg', 'jpeg', 'png', 'doc', 'docx'])])),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('approved_at', models.DateTimeField(blank=True, null=True)),
                ('note', models.TextField(blank=True, help_text='Notes about the document')),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_documents', to=settings.AUTH_USER_MODEL)),
                ('registration', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='documents', to='registrations.registration')),
            ],
            options={
                'ordering': ['-uploaded_at'],
            },
        ),
        migrations.CreateModel(
            name='RegistrationPaymentLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('provider', models.CharField(choices=[('stripe', 'Stripe')], max_length=10)),
                ('provider_ref', models.CharField(help_text='Provider reference (e.g., Stripe payment intent ID)', max_length=255)),
                ('kind', models.CharField(choices=[('intent', 'Payment Intent'), ('confirm', 'Payment Confirmation'), ('refund', 'Refund')], max_length=10)),
                ('amount_cents', models.PositiveIntegerField()),
                ('status', models.CharField(help_text='Payment status from provider', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('registration', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payment_logs', to='registrations.registration')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddIndex(
            model_name='registration',
            index=models.Index(fields=['event'], name='registratio_event_i_c30af8_idx'),
        ),
        migrations.AddIndex(
            model_name='registration',
            index=models.Index(fields=['status'], name='registratio_status_42419d_idx'),
        ),
        migrations.AddIndex(
            model_name='registration',
            index=models.Index(fields=['event', 'status'], name='registratio_event_i_246b4a_idx'),
        ),
        migrations.AddIndex(
            model_name='registration',
            index=models.Index(fields=['applicant'], name='registratio_applica_12a83c_idx'),
        ),
        migrations.AddIndex(
            model_name='registration',
            index=models.Index(fields=['team'], name='registratio_team_id_2f733b_idx'),
        ),
        migrations.AddIndex(
            model_name='registration',
            index=models.Index(fields=['type'], name='registratio_type_16721c_idx'),
        ),
        migrations.AddIndex(
            model_name='registration',
            index=models.Index(fields=['submitted_at'], name='registratio_submitt_621abc_idx'),
        ),
        migrations.AddIndex(
            model_name='registrationdocument',
            index=models.Index(fields=['registration'], name='registratio_registr_790767_idx'),
        ),
        migrations.AddIndex(
            model_name='registrationdocument',
            index=models.Index(fields=['doc_type'], name='registratio_doc_typ_fc9cb5_idx'),
        ),
        migrations.AddIndex(
            model_name='registrationpaymentlog',
            index=models.Index(fields=['registration'], name='registratio_registr_d87440_idx'),
        ),
        migrations.AddIndex(
            model_name='registrationpaymentlog',
            index=models.Index(fields=['provider_ref'], name='registratio_provide_b8e29d_idx'),
        ),
    ]
