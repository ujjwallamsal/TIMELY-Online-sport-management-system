# Generated by Django 5.2.6 on 2025-10-01 02:40

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('notifications', '0002_notificationtemplate_broadcast_notificationunread'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='DeliveryEndpoint',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('endpoint_type', models.CharField(choices=[('web_push', 'Web Push'), ('email', 'Email'), ('sms', 'SMS'), ('webhook', 'Webhook')], max_length=20)),
                ('url', models.URLField(blank=True, help_text='Endpoint URL for webhooks')),
                ('config', models.JSONField(default=dict, help_text='Endpoint configuration')),
                ('status', models.CharField(choices=[('active', 'Active'), ('inactive', 'Inactive'), ('failed', 'Failed')], default='active', max_length=20)),
                ('failure_count', models.PositiveIntegerField(default=0)),
                ('last_failure_at', models.DateTimeField(blank=True, null=True)),
                ('last_success_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['name'],
                'indexes': [models.Index(fields=['endpoint_type', 'status'], name='payments_de_endpoin_7b9da4_idx'), models.Index(fields=['status', 'failure_count'], name='payments_de_status_fab165_idx')],
            },
        ),
        migrations.CreateModel(
            name='WebhookEvent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stripe_event_id', models.CharField(max_length=255, unique=True)),
                ('event_type', models.CharField(max_length=100)),
                ('api_version', models.CharField(blank=True, max_length=20)),
                ('created_at', models.DateTimeField()),
                ('received_at', models.DateTimeField(auto_now_add=True)),
                ('data', models.JSONField()),
                ('processed', models.BooleanField(default=False)),
                ('processing_error', models.TextField(blank=True)),
            ],
            options={
                'ordering': ['-received_at'],
                'indexes': [models.Index(fields=['stripe_event_id'], name='payments_we_stripe__a54e78_idx'), models.Index(fields=['event_type', 'processed'], name='payments_we_event_t_d02e9d_idx'), models.Index(fields=['created_at'], name='payments_we_created_ef8db8_idx')],
            },
        ),
        migrations.CreateModel(
            name='PaymentIntent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stripe_payment_intent_id', models.CharField(max_length=255, unique=True)),
                ('stripe_customer_id', models.CharField(blank=True, max_length=255)),
                ('amount_cents', models.PositiveIntegerField()),
                ('currency', models.CharField(default='AUD', max_length=3)),
                ('status', models.CharField(choices=[('requires_payment_method', 'Requires Payment Method'), ('requires_confirmation', 'Requires Confirmation'), ('requires_action', 'Requires Action'), ('processing', 'Processing'), ('requires_capture', 'Requires Capture'), ('canceled', 'Canceled'), ('succeeded', 'Succeeded')], max_length=30)),
                ('metadata', models.JSONField(blank=True, default=dict)),
                ('client_secret', models.CharField(blank=True, max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('confirmed_at', models.DateTimeField(blank=True, null=True)),
                ('registration', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='payment_intents', to='registrations.registration')),
            ],
            options={
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['stripe_payment_intent_id'], name='payments_pa_stripe__02a25f_idx'), models.Index(fields=['status', 'created_at'], name='payments_pa_status_79eeea_idx'), models.Index(fields=['registration', 'status'], name='payments_pa_registr_63edbb_idx')],
            },
        ),
        migrations.CreateModel(
            name='PaymentSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stripe_publishable_key', models.CharField(blank=True, help_text='Stripe publishable key', max_length=255)),
                ('stripe_secret_key', models.CharField(blank=True, help_text='Stripe secret key (encrypted)', max_length=255)),
                ('stripe_webhook_secret', models.CharField(blank=True, help_text='Stripe webhook secret', max_length=255)),
                ('stripe_connect_account_id', models.CharField(blank=True, help_text='Stripe Connect account ID', max_length=255)),
                ('environment', models.CharField(choices=[('test', 'Test'), ('live', 'Live')], default='test', max_length=10)),
                ('is_active', models.BooleanField(default=True, help_text='Enable payment processing')),
                ('platform_fee_percent', models.DecimalField(decimal_places=2, default=0, help_text='Platform fee percentage', max_digits=5)),
                ('tax_rate_percent', models.DecimalField(decimal_places=2, default=0, help_text='Default tax rate percentage', max_digits=5)),
                ('default_currency', models.CharField(default='USD', max_length=3)),
                ('minimum_amount_cents', models.PositiveIntegerField(default=50, help_text='Minimum payment amount in cents')),
                ('maximum_amount_cents', models.PositiveIntegerField(default=100000, help_text='Maximum payment amount in cents')),
                ('enable_refunds', models.BooleanField(default=True)),
                ('enable_partial_refunds', models.BooleanField(default=True)),
                ('enable_offline_payments', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='updated_payment_settings', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Payment Settings',
                'verbose_name_plural': 'Payment Settings',
                'indexes': [models.Index(fields=['environment', 'is_active'], name='payments_pa_environ_c97ba5_idx')],
            },
        ),
        migrations.CreateModel(
            name='Refund',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stripe_refund_id', models.CharField(max_length=255, unique=True)),
                ('stripe_payment_intent_id', models.CharField(max_length=255)),
                ('amount_cents', models.PositiveIntegerField()),
                ('currency', models.CharField(default='AUD', max_length=3)),
                ('reason', models.CharField(blank=True, max_length=100)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('succeeded', 'Succeeded'), ('failed', 'Failed'), ('canceled', 'Canceled')], max_length=20)),
                ('metadata', models.JSONField(blank=True, default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('registration', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='refunds', to='registrations.registration')),
            ],
            options={
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['stripe_refund_id'], name='payments_re_stripe__bc040b_idx'), models.Index(fields=['status', 'created_at'], name='payments_re_status_698972_idx'), models.Index(fields=['registration', 'status'], name='payments_re_registr_dbb6f8_idx')],
            },
        ),
        migrations.CreateModel(
            name='DeliveryLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('sent', 'Sent'), ('failed', 'Failed'), ('retrying', 'Retrying')], default='pending', max_length=20)),
                ('response_code', models.PositiveIntegerField(blank=True, null=True)),
                ('response_body', models.TextField(blank=True)),
                ('error_message', models.TextField(blank=True)),
                ('retry_count', models.PositiveIntegerField(default=0)),
                ('max_retries', models.PositiveIntegerField(default=3)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('sent_at', models.DateTimeField(blank=True, null=True)),
                ('endpoint', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='delivery_logs', to='payments.deliveryendpoint')),
                ('notification', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='delivery_logs', to='notifications.notification')),
                ('webhook_event', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='delivery_logs', to='payments.webhookevent')),
            ],
            options={
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['status', 'created_at'], name='payments_de_status_25bad5_idx'), models.Index(fields=['endpoint', 'status'], name='payments_de_endpoin_578c39_idx'), models.Index(fields=['notification', 'status'], name='payments_de_notific_70b392_idx')],
            },
        ),
    ]
