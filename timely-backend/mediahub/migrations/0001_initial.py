# Generated by Django 5.2.5 on 2025-09-03 09:10

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('events', '0004_event_venue'),
        ('fixtures', '0005_delete_match_fixture_fixtures_fi_event_i_827807_idx_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='MediaItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('kind', models.CharField(choices=[('photo', 'Photo'), ('video', 'Video')], help_text='Type of media (photo or video)', max_length=10)),
                ('file', models.FileField(help_text='Media file (images: jpg/png/webp, videos: mp4/webm)', upload_to='media/%Y/%m/%d/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['jpg', 'jpeg', 'png', 'webp', 'mp4', 'webm'])])),
                ('thumbnail', models.ImageField(blank=True, help_text='Thumbnail for images (auto-generated)', null=True, upload_to='media/thumbnails/%Y/%m/%d/')),
                ('title', models.CharField(blank=True, help_text='Optional title for the media', max_length=200, null=True)),
                ('description', models.TextField(blank=True, help_text='Optional description', null=True)),
                ('status', models.CharField(choices=[('pending', 'Pending Review'), ('approved', 'Approved'), ('rejected', 'Rejected'), ('hidden', 'Hidden')], default='pending', help_text='Moderation status', max_length=10)),
                ('featured', models.BooleanField(default=False, help_text='Whether this media is featured/pinned')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('event', models.ForeignKey(blank=True, help_text='Event this media is associated with', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='media_items', to='events.event')),
                ('fixture', models.ForeignKey(blank=True, help_text='Fixture/match this media is associated with', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='media_items', to='fixtures.fixture')),
                ('uploader', models.ForeignKey(help_text='User who uploaded this media', on_delete=django.db.models.deletion.CASCADE, related_name='uploaded_media_items', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['status', '-created_at'], name='mediahub_me_status_ef1b17_idx'), models.Index(fields=['event', 'status', '-created_at'], name='mediahub_me_event_i_b14ad6_idx'), models.Index(fields=['fixture', 'status', '-created_at'], name='mediahub_me_fixture_dc20ee_idx'), models.Index(fields=['uploader', 'status'], name='mediahub_me_uploade_c33ba9_idx'), models.Index(fields=['featured', 'status', '-created_at'], name='mediahub_me_feature_a7b511_idx')],
                'constraints': [models.CheckConstraint(condition=models.Q(('event__isnull', False), ('fixture__isnull', False), _connector='OR'), name='media_must_link_to_event_or_fixture')],
            },
        ),
    ]
