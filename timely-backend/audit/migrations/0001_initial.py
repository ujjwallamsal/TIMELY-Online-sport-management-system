# Generated by Django 5.2.5 on 2025-09-09 00:28

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AuditLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.CharField(choices=[('USER_CREATE', 'User Created'), ('USER_UPDATE', 'User Updated'), ('USER_DELETE', 'User Deleted'), ('LOGIN', 'User Login'), ('LOGOUT', 'User Logout'), ('PASSWORD_CHANGE', 'Password Changed'), ('EMAIL_VERIFICATION', 'Email Verified'), ('ROLE_ASSIGNMENT', 'Role Assigned'), ('ROLE_REMOVAL', 'Role Removed'), ('ROLE_REQUEST_APPROVED', 'Role Request Approved'), ('ROLE_REQUEST_REJECTED', 'Role Request Rejected'), ('REGISTRATION_CREATE', 'Registration Created'), ('REGISTRATION_APPROVE', 'Registration Approved'), ('REGISTRATION_REJECT', 'Registration Rejected'), ('REGISTRATION_WITHDRAW', 'Registration Withdrawn'), ('PAYMENT_CREATE', 'Payment Created'), ('PAYMENT_SUCCESS', 'Payment Successful'), ('PAYMENT_FAILED', 'Payment Failed'), ('PAYMENT_REFUND', 'Payment Refunded'), ('WEBHOOK_RECEIVED', 'Webhook Received'), ('KYC_SUBMIT', 'KYC Submitted'), ('KYC_APPROVE', 'KYC Approved'), ('KYC_REJECT', 'KYC Rejected'), ('CONTENT_CREATE', 'Content Created'), ('CONTENT_APPROVE', 'Content Approved'), ('CONTENT_REJECT', 'Content Rejected'), ('CONTENT_DELETE', 'Content Deleted'), ('SYSTEM_BACKUP', 'System Backup'), ('SYSTEM_RESTORE', 'System Restore'), ('ADMIN_ACTION', 'Admin Action')], help_text='Type of action performed', max_length=50)),
                ('target_type', models.CharField(help_text='Type of resource being acted upon', max_length=100)),
                ('target_id', models.CharField(blank=True, help_text='ID of the target resource', max_length=100)),
                ('meta', models.JSONField(blank=True, default=dict, help_text='Additional metadata about the action')),
                ('ip_address', models.GenericIPAddressField(blank=True, help_text='IP address of the request', null=True)),
                ('user_agent', models.TextField(blank=True, help_text='User agent of the request')),
                ('created_at', models.DateTimeField(db_index=True, default=django.utils.timezone.now, help_text='When the action was performed')),
                ('actor_id', models.ForeignKey(blank=True, help_text='User who performed the action', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='audit_actions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Audit Log',
                'verbose_name_plural': 'Audit Logs',
                'db_table': 'audit_auditlog',
                'ordering': ['-created_at'],
                'permissions': [('can_view_audit', 'Can view audit logs'), ('can_export_audit', 'Can export audit logs')],
                'indexes': [models.Index(fields=['created_at'], name='audit_audit_created_2c1626_idx'), models.Index(fields=['action'], name='audit_audit_action_86e815_idx'), models.Index(fields=['actor_id', 'created_at'], name='audit_audit_actor_i_c74fcc_idx'), models.Index(fields=['target_type', 'target_id'], name='audit_audit_target__2d648a_idx')],
            },
        ),
    ]
