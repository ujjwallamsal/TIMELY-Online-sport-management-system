# Generated by Django 5.2.5 on 2025-08-21 10:44

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('teams', '0002_auto_20250821_1822'),
        ('venues', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='TeamInvitation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(choices=[('PLAYER', 'Player'), ('COACH', 'Coach'), ('MANAGER', 'Manager'), ('CAPTAIN', 'Captain'), ('ASSISTANT_COACH', 'Assistant Coach'), ('PHYSIO', 'Physiotherapist'), ('SUPPORT', 'Support Staff')], default='PLAYER', max_length=20)),
                ('message', models.TextField(blank=True, help_text='Personal message with invitation')),
                ('status', models.CharField(choices=[('PENDING', 'Pending'), ('ACCEPTED', 'Accepted'), ('DECLINED', 'Declined'), ('EXPIRED', 'Expired')], default='PENDING', max_length=20)),
                ('expires_at', models.DateTimeField(help_text='When the invitation expires')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('responded_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='TeamMember',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(choices=[('PLAYER', 'Player'), ('COACH', 'Coach'), ('MANAGER', 'Manager'), ('CAPTAIN', 'Captain'), ('ASSISTANT_COACH', 'Assistant Coach'), ('PHYSIO', 'Physiotherapist'), ('SUPPORT', 'Support Staff')], default='PLAYER', max_length=20)),
                ('status', models.CharField(choices=[('ACTIVE', 'Active'), ('INACTIVE', 'Inactive'), ('SUSPENDED', 'Suspended'), ('INJURED', 'Injured')], default='ACTIVE', max_length=20)),
                ('jersey_number', models.PositiveIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(99)])),
                ('position', models.CharField(blank=True, help_text='Player position (e.g., Forward, Defender)', max_length=100)),
                ('joined_date', models.DateField(default=django.utils.timezone.now)),
                ('left_date', models.DateField(blank=True, null=True)),
                ('can_manage_team', models.BooleanField(default=False, help_text='Can manage team settings and roster')),
                ('can_edit_results', models.BooleanField(default=False, help_text='Can edit match results')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['team', 'role', 'jersey_number'],
            },
        ),
        migrations.AlterModelOptions(
            name='team',
            options={'ordering': ['name']},
        ),
        migrations.RenameIndex(
            model_name='team',
            new_name='teams_team_sport_12bd8b_idx',
            old_name='teams_team_sport_i_123456_idx',
        ),
        migrations.RemoveField(
            model_name='athleteprofile',
            name='bio',
        ),
        migrations.RemoveField(
            model_name='athleteprofile',
            name='date_of_birth',
        ),
        migrations.RemoveField(
            model_name='athleteprofile',
            name='sport',
        ),
        migrations.RemoveField(
            model_name='athleteprofile',
            name='team',
        ),
        migrations.RemoveField(
            model_name='team',
            name='coach',
        ),
        migrations.AddField(
            model_name='athleteprofile',
            name='achievements',
            field=models.JSONField(blank=True, default=list, help_text='List of achievements and awards'),
        ),
        migrations.AddField(
            model_name='athleteprofile',
            name='availability',
            field=models.JSONField(blank=True, default=dict, help_text='Weekly availability schedule'),
        ),
        migrations.AddField(
            model_name='athleteprofile',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, default=django.utils.timezone.now),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='athleteprofile',
            name='emergency_contact',
            field=models.CharField(blank=True, max_length=255),
        ),
        migrations.AddField(
            model_name='athleteprofile',
            name='emergency_phone',
            field=models.CharField(blank=True, max_length=20),
        ),
        migrations.AddField(
            model_name='athleteprofile',
            name='height_cm',
            field=models.PositiveIntegerField(blank=True, help_text='Height in centimeters', null=True),
        ),
        migrations.AddField(
            model_name='athleteprofile',
            name='medical_conditions',
            field=models.TextField(blank=True, help_text='Relevant medical conditions'),
        ),
        migrations.AddField(
            model_name='athleteprofile',
            name='preferred_positions',
            field=models.JSONField(blank=True, default=list, help_text='Preferred playing positions'),
        ),
        migrations.AddField(
            model_name='athleteprofile',
            name='primary_sport',
            field=models.CharField(blank=True, max_length=100),
        ),
        migrations.AddField(
            model_name='athleteprofile',
            name='secondary_sports',
            field=models.JSONField(blank=True, default=list, help_text='List of secondary sports'),
        ),
        migrations.AddField(
            model_name='athleteprofile',
            name='skill_level',
            field=models.CharField(choices=[('BEGINNER', 'Beginner'), ('INTERMEDIATE', 'Intermediate'), ('ADVANCED', 'Advanced'), ('ELITE', 'Elite'), ('PROFESSIONAL', 'Professional')], default='INTERMEDIATE', max_length=20),
        ),
        migrations.AddField(
            model_name='athleteprofile',
            name='updated_at',
            field=models.DateTimeField(auto_now=True),
        ),
        migrations.AddField(
            model_name='athleteprofile',
            name='weight_kg',
            field=models.DecimalField(blank=True, decimal_places=2, help_text='Weight in kilograms', max_digits=5, null=True),
        ),
        migrations.AddField(
            model_name='athleteprofile',
            name='years_experience',
            field=models.PositiveIntegerField(default=0, help_text='Years of experience in primary sport'),
        ),
        migrations.AlterField(
            model_name='team',
            name='created_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_teams', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='team',
            name='name',
            field=models.CharField(max_length=255, unique=True),
        ),
        migrations.AddIndex(
            model_name='athleteprofile',
            index=models.Index(fields=['primary_sport', 'skill_level'], name='teams_athle_primary_c98be6_idx'),
        ),
        migrations.AddIndex(
            model_name='athleteprofile',
            index=models.Index(fields=['years_experience'], name='teams_athle_years_e_4c882e_idx'),
        ),
        migrations.AddIndex(
            model_name='team',
            index=models.Index(fields=['created_by'], name='teams_team_created_9adf4c_idx'),
        ),
        migrations.AddField(
            model_name='teaminvitation',
            name='invited_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sent_invitations', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='teaminvitation',
            name='invited_user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='team_invitations', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='teaminvitation',
            name='team',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='invitations', to='teams.team'),
        ),
        migrations.AddField(
            model_name='teammember',
            name='team',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='members', to='teams.team'),
        ),
        migrations.AddField(
            model_name='teammember',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='team_memberships', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddIndex(
            model_name='teaminvitation',
            index=models.Index(fields=['team', 'status'], name='teams_teami_team_id_02e3eb_idx'),
        ),
        migrations.AddIndex(
            model_name='teaminvitation',
            index=models.Index(fields=['invited_user', 'status'], name='teams_teami_invited_9c17c1_idx'),
        ),
        migrations.AddIndex(
            model_name='teaminvitation',
            index=models.Index(fields=['expires_at'], name='teams_teami_expires_32bb3b_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='teaminvitation',
            unique_together={('team', 'invited_user')},
        ),
        migrations.AddIndex(
            model_name='teammember',
            index=models.Index(fields=['team', 'status'], name='teams_teamm_team_id_7d1e63_idx'),
        ),
        migrations.AddIndex(
            model_name='teammember',
            index=models.Index(fields=['user', 'status'], name='teams_teamm_user_id_02ee6f_idx'),
        ),
        migrations.AddIndex(
            model_name='teammember',
            index=models.Index(fields=['role', 'status'], name='teams_teamm_role_7708cc_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='teammember',
            unique_together={('team', 'user')},
        ),
    ]
