# Generated by Django 5.2.5 on 2025-08-21 02:03

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('events', '0002_division_alter_event_options_event_capacity_and_more'),
        ('fixtures', '0001_initial'),
        ('registrations', '0001_initial'),
        ('teams', '0001_initial'),
        ('venues', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Fixture',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text="Fixture name (e.g., 'Group A', 'Quarter Finals')", max_length=100)),
                ('tournament_type', models.CharField(choices=[('ROUND_ROBIN', 'Round Robin'), ('KNOCKOUT', 'Knockout'), ('GROUP_STAGE', 'Group Stage + Knockout'), ('SWISS', 'Swiss System')], default='ROUND_ROBIN', max_length=20)),
                ('status', models.CharField(choices=[('DRAFT', 'Draft'), ('PROPOSED', 'Proposed'), ('PUBLISHED', 'Published'), ('CANCELLED', 'Cancelled')], db_index=True, default='DRAFT', max_length=20)),
                ('rounds', models.PositiveIntegerField(default=1, help_text='Number of rounds')),
                ('teams_per_match', models.PositiveIntegerField(default=2, help_text='Teams per match (2 for standard, 4 for doubles)')),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('match_duration_minutes', models.PositiveIntegerField(default=90, help_text='Duration of each match in minutes')),
                ('break_between_matches_minutes', models.PositiveIntegerField(default=30, help_text='Break between consecutive matches')),
                ('max_matches_per_venue_per_day', models.PositiveIntegerField(default=8, help_text='Maximum matches per venue per day')),
                ('earliest_start_time', models.TimeField(default='09:00:00', help_text='Earliest match start time')),
                ('latest_end_time', models.TimeField(default='22:00:00', help_text='Latest match end time')),
                ('generated_at', models.DateTimeField(auto_now_add=True)),
                ('generation_notes', models.TextField(blank=True, help_text='Notes about fixture generation')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['event', 'start_date', 'name'],
            },
        ),
        migrations.CreateModel(
            name='MatchEntry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entry_type', models.CharField(choices=[('TEAM', 'Team'), ('INDIVIDUAL', 'Individual'), ('BYE', 'Bye (No opponent)')], max_length=20)),
                ('position', models.CharField(choices=[('HOME', 'Home'), ('AWAY', 'Away'), ('PLAYER1', 'Player 1'), ('PLAYER2', 'Player 2'), ('PLAYER3', 'Player 3'), ('PLAYER4', 'Player 4')], max_length=10)),
                ('seed', models.PositiveIntegerField(blank=True, help_text='Tournament seed number', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['match', 'position'],
            },
        ),
        migrations.AlterModelOptions(
            name='match',
            options={'ordering': ['fixture', 'round_number', 'match_number', 'scheduled_at']},
        ),
        migrations.RemoveIndex(
            model_name='match',
            name='fixtures_ma_event_i_797a4b_idx',
        ),
        migrations.RemoveIndex(
            model_name='match',
            name='fixtures_ma_status_8f0ce0_idx',
        ),
        migrations.RemoveIndex(
            model_name='match',
            name='fixtures_ma_is_publ_cfaac1_idx',
        ),
        migrations.AddField(
            model_name='match',
            name='match_number',
            field=models.PositiveIntegerField(default=1, help_text='Match number within the round'),
        ),
        migrations.AddField(
            model_name='match',
            name='original_scheduled_at',
            field=models.DateTimeField(blank=True, help_text='Original scheduled time before rescheduling', null=True),
        ),
        migrations.AddField(
            model_name='match',
            name='reschedule_reason',
            field=models.TextField(blank=True, help_text='Reason for rescheduling'),
        ),
        migrations.AddField(
            model_name='match',
            name='rescheduled_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='rescheduled_matches', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='match',
            name='round_number',
            field=models.PositiveIntegerField(default=1, help_text='Round number in the tournament'),
        ),
        migrations.AddField(
            model_name='match',
            name='scheduled_at',
            field=models.DateTimeField(blank=True, help_text='Scheduled start time', null=True),
        ),
        migrations.AddField(
            model_name='match',
            name='score_away',
            field=models.PositiveIntegerField(null=True),
        ),
        migrations.AddField(
            model_name='match',
            name='score_home',
            field=models.PositiveIntegerField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='match',
            name='is_published',
            field=models.BooleanField(default=False, help_text='Whether match is visible to participants'),
        ),
        migrations.AlterField(
            model_name='match',
            name='status',
            field=models.CharField(choices=[('SCHEDULED', 'Scheduled'), ('LIVE', 'Live'), ('COMPLETED', 'Completed'), ('CANCELLED', 'Cancelled'), ('POSTPONED', 'Postponed')], db_index=True, default='SCHEDULED', max_length=12),
        ),
        migrations.AddField(
            model_name='fixture',
            name='division',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='fixtures', to='events.division'),
        ),
        migrations.AddField(
            model_name='fixture',
            name='event',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='fixtures', to='events.event'),
        ),
        migrations.AddField(
            model_name='fixture',
            name='generated_by',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='generated_fixtures', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='fixture',
            name='venues',
            field=models.ManyToManyField(blank=True, related_name='fixtures', to='venues.venue'),
        ),
        migrations.AddField(
            model_name='match',
            name='fixture',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='matches', to='fixtures.fixture'),
        ),
        migrations.AlterUniqueTogether(
            name='match',
            unique_together={('fixture', 'round_number', 'match_number')},
        ),
        migrations.AddField(
            model_name='matchentry',
            name='fixture',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='match_entries', to='fixtures.fixture'),
        ),
        migrations.AddField(
            model_name='matchentry',
            name='individual_registration',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='match_entries', to='registrations.registration'),
        ),
        migrations.AddField(
            model_name='matchentry',
            name='match',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='entries', to='fixtures.match'),
        ),
        migrations.AddField(
            model_name='matchentry',
            name='previous_match',
            field=models.ForeignKey(blank=True, help_text='Match that this entry came from', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='next_matches', to='fixtures.match'),
        ),
        migrations.AddField(
            model_name='matchentry',
            name='team',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='match_entries', to='teams.team'),
        ),
        migrations.AddField(
            model_name='match',
            name='winner',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='won_matches', to='fixtures.matchentry'),
        ),
        migrations.AddIndex(
            model_name='match',
            index=models.Index(fields=['fixture', 'round_number'], name='fixtures_ma_fixture_2e0ca4_idx'),
        ),
        migrations.AddIndex(
            model_name='match',
            index=models.Index(fields=['venue', 'scheduled_at'], name='fixtures_ma_venue_i_b68589_idx'),
        ),
        migrations.AddIndex(
            model_name='match',
            index=models.Index(fields=['status', 'is_published'], name='fixtures_ma_status_0bf682_idx'),
        ),
        migrations.AddIndex(
            model_name='match',
            index=models.Index(fields=['scheduled_at'], name='fixtures_ma_schedul_cb60a6_idx'),
        ),
        migrations.AddIndex(
            model_name='fixture',
            index=models.Index(fields=['event', 'status'], name='fixtures_fi_event_i_ced164_idx'),
        ),
        migrations.AddIndex(
            model_name='fixture',
            index=models.Index(fields=['division', 'status'], name='fixtures_fi_divisio_d5c014_idx'),
        ),
        migrations.AddIndex(
            model_name='fixture',
            index=models.Index(fields=['start_date', 'end_date'], name='fixtures_fi_start_d_1d2c01_idx'),
        ),
        migrations.AddIndex(
            model_name='fixture',
            index=models.Index(fields=['tournament_type', 'status'], name='fixtures_fi_tournam_5e34b5_idx'),
        ),
        migrations.RemoveField(
            model_name='match',
            name='end_time',
        ),
        migrations.RemoveField(
            model_name='match',
            name='event',
        ),
        migrations.RemoveField(
            model_name='match',
            name='start_time',
        ),
        migrations.RemoveField(
            model_name='match',
            name='team_a',
        ),
        migrations.RemoveField(
            model_name='match',
            name='team_b',
        ),
        migrations.AddIndex(
            model_name='matchentry',
            index=models.Index(fields=['fixture', 'match'], name='fixtures_ma_fixture_80f86d_idx'),
        ),
        migrations.AddIndex(
            model_name='matchentry',
            index=models.Index(fields=['team', 'entry_type'], name='fixtures_ma_team_id_286792_idx'),
        ),
        migrations.AddIndex(
            model_name='matchentry',
            index=models.Index(fields=['seed'], name='fixtures_ma_seed_3ac6ac_idx'),
        ),
    ]
