# Generated by Django 5.2.6 on 2025-09-16 05:27

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('api', '0001_initial'),
        ('events', '0001_initial'),
        ('fixtures', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='LeaderboardEntry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pts', models.PositiveIntegerField(default=0, help_text='Total points (3 for win, 1 for draw)')),
                ('w', models.PositiveIntegerField(default=0, help_text='Number of wins')),
                ('d', models.PositiveIntegerField(default=0, help_text='Number of draws')),
                ('l', models.PositiveIntegerField(default=0, help_text='Number of losses')),
                ('gf', models.PositiveIntegerField(default=0, help_text='Goals scored')),
                ('ga', models.PositiveIntegerField(default=0, help_text='Goals conceded')),
                ('gd', models.IntegerField(default=0, help_text='Goal difference (GF - GA)')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='leaderboard_entries', to='events.event')),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='leaderboard_entries', to='api.team')),
            ],
            options={
                'ordering': ['event', '-pts', '-gd', '-gf'],
                'indexes': [models.Index(fields=['event', 'pts'], name='results_lea_event_i_c9a5bb_idx'), models.Index(fields=['team', 'event'], name='results_lea_team_id_c19a4b_idx'), models.Index(fields=['event'], name='results_lea_event_i_6f2482_idx'), models.Index(fields=['team'], name='results_lea_team_id_8d35a5_idx')],
                'constraints': [models.UniqueConstraint(fields=('event', 'team'), name='unique_event_team_leaderboard')],
            },
        ),
        migrations.CreateModel(
            name='Result',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('home_score', models.PositiveIntegerField(default=0, help_text='Home team score')),
                ('away_score', models.PositiveIntegerField(default=0, help_text='Away team score')),
                ('stats', models.JSONField(blank=True, default=dict, help_text='Additional statistics (JSON)')),
                ('finalized_at', models.DateTimeField(blank=True, help_text='When result was finalized', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('entered_by', models.ForeignKey(blank=True, help_text='User who entered this result', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='entered_results', to=settings.AUTH_USER_MODEL)),
                ('fixture', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='result', to='fixtures.fixture')),
                ('winner', models.ForeignKey(blank=True, help_text='Winning team (null for draws)', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='won_results', to='api.team')),
            ],
            options={
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['finalized_at'], name='results_res_finaliz_027a24_idx'), models.Index(fields=['entered_by'], name='results_res_entered_e46685_idx'), models.Index(fields=['fixture'], name='results_res_fixture_031a1c_idx'), models.Index(fields=['winner'], name='results_res_winner__7f15f5_idx')],
            },
        ),
    ]
