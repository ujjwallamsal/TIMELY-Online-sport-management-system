# Generated by Django 5.2.5 on 2025-09-09 01:33

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('events', '0004_event_venue'),
        ('fixtures', '0005_delete_match_fixture_fixtures_fi_event_i_827807_idx_and_more'),
        ('results', '0002_rename_score_a_result_score_away_and_more'),
        ('teams', '0006_teamevententry_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AthleteStat',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('metrics', models.JSONField(default=dict, help_text='Sport-specific metrics (e.g., time, distance, score)')),
                ('position', models.PositiveIntegerField(default=1, help_text='Final position/ranking')),
                ('points', models.PositiveIntegerField(default=0, help_text='Points awarded')),
                ('verified', models.BooleanField(default=False, help_text='Whether stats are verified')),
                ('verified_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['event', 'position', 'points'],
            },
        ),
        migrations.CreateModel(
            name='LeaderboardEntry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('points', models.PositiveIntegerField(default=0, help_text='Total points (3 for win, 1 for draw)')),
                ('matches_played', models.PositiveIntegerField(default=0, help_text='Number of matches played')),
                ('wins', models.PositiveIntegerField(default=0, help_text='Number of wins')),
                ('draws', models.PositiveIntegerField(default=0, help_text='Number of draws')),
                ('losses', models.PositiveIntegerField(default=0, help_text='Number of losses')),
                ('goals_for', models.PositiveIntegerField(default=0, help_text='Goals scored')),
                ('goals_against', models.PositiveIntegerField(default=0, help_text='Goals conceded')),
                ('goal_difference', models.IntegerField(default=0, help_text='Goal difference (GF - GA)')),
                ('position', models.PositiveIntegerField(default=1, help_text='Current position in leaderboard')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['event', 'position', '-points', '-goal_difference', '-goals_for'],
            },
        ),
        migrations.AddField(
            model_name='result',
            name='published',
            field=models.BooleanField(db_index=True, default=False, help_text='Whether result is published to public'),
        ),
        migrations.AddField(
            model_name='result',
            name='status',
            field=models.CharField(choices=[('provisional', 'Provisional'), ('final', 'Final')], db_index=True, default='provisional', help_text='Result status (provisional or final)', max_length=20),
        ),
        migrations.AddField(
            model_name='result',
            name='verified_at',
            field=models.DateTimeField(blank=True, help_text='When result was verified', null=True),
        ),
        migrations.AddField(
            model_name='result',
            name='verified_by',
            field=models.ForeignKey(blank=True, help_text='User who verified this result', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='verified_results', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='result',
            name='winner',
            field=models.ForeignKey(blank=True, help_text='Winning team (null for draws)', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='won_results', to='teams.team'),
        ),
        migrations.AlterField(
            model_name='result',
            name='notes',
            field=models.TextField(blank=True, default='', help_text='Additional result notes'),
        ),
        migrations.AlterField(
            model_name='result',
            name='score_away',
            field=models.PositiveIntegerField(default=0, help_text='Away team score'),
        ),
        migrations.AlterField(
            model_name='result',
            name='score_home',
            field=models.PositiveIntegerField(default=0, help_text='Home team score'),
        ),
        migrations.AddIndex(
            model_name='result',
            index=models.Index(fields=['status'], name='results_res_status_64ea0d_idx'),
        ),
        migrations.AddIndex(
            model_name='result',
            index=models.Index(fields=['published'], name='results_res_publish_c68f86_idx'),
        ),
        migrations.AddIndex(
            model_name='result',
            index=models.Index(fields=['verified_at'], name='results_res_verifie_386f23_idx'),
        ),
        migrations.AddField(
            model_name='athletestat',
            name='athlete',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='athlete_stats', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='athletestat',
            name='event',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='athlete_stats', to='events.event'),
        ),
        migrations.AddField(
            model_name='athletestat',
            name='verified_by',
            field=models.ForeignKey(blank=True, help_text='User who verified these stats', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='verified_athlete_stats', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='leaderboardentry',
            name='event',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='leaderboard_entries', to='events.event'),
        ),
        migrations.AddField(
            model_name='leaderboardentry',
            name='team',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='leaderboard_entries', to='teams.team'),
        ),
        migrations.AddIndex(
            model_name='athletestat',
            index=models.Index(fields=['event', 'position'], name='results_ath_event_i_336524_idx'),
        ),
        migrations.AddIndex(
            model_name='athletestat',
            index=models.Index(fields=['athlete', 'event'], name='results_ath_athlete_1415d3_idx'),
        ),
        migrations.AddIndex(
            model_name='athletestat',
            index=models.Index(fields=['verified'], name='results_ath_verifie_320cde_idx'),
        ),
        migrations.AddConstraint(
            model_name='athletestat',
            constraint=models.UniqueConstraint(fields=('event', 'athlete'), name='unique_event_athlete_stats'),
        ),
        migrations.AddIndex(
            model_name='leaderboardentry',
            index=models.Index(fields=['event', 'position'], name='results_lea_event_i_f4b774_idx'),
        ),
        migrations.AddIndex(
            model_name='leaderboardentry',
            index=models.Index(fields=['event', 'points'], name='results_lea_event_i_cb3016_idx'),
        ),
        migrations.AddIndex(
            model_name='leaderboardentry',
            index=models.Index(fields=['team', 'event'], name='results_lea_team_id_c19a4b_idx'),
        ),
        migrations.AddConstraint(
            model_name='leaderboardentry',
            constraint=models.UniqueConstraint(fields=('event', 'team'), name='unique_event_team_leaderboard'),
        ),
    ]
